name: CI

on:
  push:
    tags:
      - 'v*'
    branches:
      - '*'
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'deployment/**'
      - '.github/**'
  workflow_dispatch:

permissions:
  actions: read
  contents: read

env:
  NODE_VERSION: 22.15.0
  # DOKPLOY_API_KEY: ${{ secrets.DOKPLOY_API_KEY }}
  # DOKPLOY_HOST: ${{ secrets.DOKPLOY_HOST }}
  # DOKPLOY_COMPOSE_ID_STAGING: ${{ secrets.DOKPLOY_COMPOSE_ID_STAGING }}
  # DOKPLOY_COMPOSE_ID_PRODUCTION: ${{ secrets.DOKPLOY_COMPOSE_ID_PRODUCTION }}

jobs:
  install:
    name: Установка зависимостей
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: |
          corepack enable

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --immutable

  build-services:
    name: Сборка сервисов
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: |
          corepack enable

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: nrwl/nx-set-shas@v4
      - run: yarn nx affected -t build --skip-nx-cache

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/apps/*

  test-unit:
    name: Unit-тесты
    runs-on: ubuntu-latest
    needs: build-services
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: |
          corepack enable

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: nrwl/nx-set-shas@v4
      - run: yarn nx affected -t test --exclude=*-e2e --skip-nx-cache

  # test-e2e:
  #   name: E2E-тесты
  #   runs-on: ubuntu-latest
  #   needs: build-services
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '${{ env.NODE_VERSION }}'
  #     - run: |
  #         corepack enable

  #     - uses: actions/cache@v4
  #       id: yarn-cache
  #       with:
  #         path: 'node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

  #     # - name: Подготовка конфигурации
  #     #   run: |
  #     #     echo "${{ secrets.TEST_SERVER_ENV }}" >> ./apps/api/.env
  #     #     echo 'VERSION=$GITHUB_SHA' >> ./apps/api/.env

  #     - uses: nrwl/nx-set-shas@v4
  #     - run: yarn nx affected -t e2e --skip-nx-cache

  build-images:
    name: Сборка образов
    runs-on: ubuntu-latest
    needs:
      - build-services
    if: |
      github.ref == 'refs/heads/main' ||
      startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: |
          corepack enable

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: nrwl/nx-set-shas@v4

      - if: github.ref == 'refs/heads/main'
        run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} CI_TAG=$GITHUB_SHA yarn build-images:staging

      - if: startsWith(github.ref, 'refs/tags/v')
        run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} CI_TAG=${GITHUB_REF/refs\/tags\//} yarn build-images:production

  deploy-staging:
    name: Деплой
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/main'
    needs: build-images
    steps:
      - run: echo "Deploy migrations (staging)!"
      - run: echo "Deploy (staging)!"

  deploy:
    name: Деплой
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-images
    steps:
      - run: echo "Deploy migrations (production)"
      # $env => .env: AUTH_DATABASE_URL=..., prisma migrate deploy
      - run: echo "Deploy (production)!"
